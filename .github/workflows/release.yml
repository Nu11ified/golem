name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Required to create releases and upload assets
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'
    
    - name: Get version
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
    
    - name: Build binaries
      run: |
        mkdir -p releases
        
        # Build for multiple platforms
        PLATFORMS="linux/amd64 linux/arm64 darwin/amd64 darwin/arm64 windows/amd64"
        
        for platform in $PLATFORMS; do
          IFS='/' read -r -a platform_split <<< "$platform"
          GOOS="${platform_split[0]}"
          GOARCH="${platform_split[1]}"
          
          output_name="golem-${{ steps.get_version.outputs.VERSION }}-$GOOS-$GOARCH"
          if [ "$GOOS" = "windows" ]; then
            output_name="$output_name.exe"
          fi
          
          echo "Building for $GOOS/$GOARCH..."
          env GOOS="$GOOS" GOARCH="$GOARCH" go build -o "releases/$output_name" -ldflags="-s -w -X main.version=${{ steps.get_version.outputs.VERSION }}" ./cmd/golem/main.go
          
          # Create compressed archive
          if [ "$GOOS" = "windows" ]; then
            (cd releases && zip "golem-${{ steps.get_version.outputs.VERSION }}-$GOOS-$GOARCH.zip" "$output_name")
          else
            (cd releases && tar -czf "golem-${{ steps.get_version.outputs.VERSION }}-$GOOS-$GOARCH.tar.gz" "$output_name")
          fi
        done
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: releases/*
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 